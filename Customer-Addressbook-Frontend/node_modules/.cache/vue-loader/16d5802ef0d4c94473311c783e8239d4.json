{"remainingRequest":"C:\\Projects\\customer-addressbook-frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Projects\\customer-addressbook-frontend\\src\\components\\CustomerForm.vue?vue&type=style&index=0&id=7150c4f2&lang=scss&scoped=true","dependencies":[{"path":"C:\\Projects\\customer-addressbook-frontend\\src\\components\\CustomerForm.vue","mtime":1631259827862},{"path":"C:\\Projects\\customer-addressbook-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\customer-addressbook-frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1628298225000},{"path":"C:\\Projects\\customer-addressbook-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Projects\\customer-addressbook-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\customer-addressbook-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\customer-addressbook-frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5mb3JtLWRlbW8gewogIC5jYXJkIHsKICAgIG1pbi13aWR0aDogODAwcHg7CgogICAgZm9ybSB7CiAgICAgIG1hcmdpbi10b3A6IDJyZW07CiAgICB9CgogICAgLnAtZmllbGQgewogICAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07CiAgICB9CiAgfQoKICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5NjBweCkgewogICAgLmNhcmQgewogICAgICB3aWR0aDogODAlOwogICAgfQogIH0KfQo="},{"version":3,"sources":["C:\\Projects\\customer-addressbook-frontend\\src\\components\\CustomerForm.vue"],"names":[],"mappings":";AAgOA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEhB,CAAC,CAAC,CAAC,EAAE;MACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAClB;;IAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB;EACF;;EAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACnC,CAAC,CAAC,CAAC,CAAC,EAAE;MACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACZ;EACF;AACF","file":"C:/Projects/customer-addressbook-frontend/src/components/CustomerForm.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"form-demo\">\n  <Toast position=\"top-left\" />\n    <div class=\"p-d-flex p-jc-center\">\n      <div class=\"card\">\n        <h5 class=\"p-text-center\">Customer Creation Form</h5>\n        <form @submit.prevent=\"handleSubmit(!v$.$invalid)\" class=\"p-fluid\">\n          <div class=\"p-field p-grid\">\n            <label for=\"name\" class=\"p-col-fixed\" style=\"width: 100px\"\n              >Name</label\n            >\n            <div class=\"p-col\">\n              <InputText\n                id=\"name\"\n                v-model=\"v$.name.$model\"\n                :class=\"{ 'p-invalid': v$.name.$invalid && submitted }\"\n              />\n              <small\n                v-if=\"\n                  (v$.name.$invalid && submitted) || v$.name.$pending.$response\n                \"\n                class=\"p-error\"\n                >{{ v$.name.required.$message.replace(\"Value\", \"Name\") }}</small\n              >\n            </div>\n          </div>\n          <div class=\"p-field p-grid\">\n            <label for=\"nic\" class=\"p-col-fixed\" style=\"width: 100px\"\n              >NIC</label\n            >\n            <div class=\"p-col\">\n              <InputText\n                id=\"nic\"\n                v-model=\"v$.nic.$model\"\n                :class=\"{ 'p-invalid': v$.nic.$invalid && submitted }\"\n              />\n              <small\n                v-if=\"\n                  (v$.nic.$invalid && submitted) || v$.nic.$pending.$response\n                \"\n                class=\"p-error\"\n                >{{ v$.nic.required.$message.replace(\"Value\", \"nic\") }}</small\n              >\n            </div>\n          </div>\n          <div class=\"p-field p-grid\">\n            <label for=\"address\" class=\"p-col-fixed\" style=\"width: 100px\"\n              >Address</label\n            >\n            <div class=\"p-col\">\n              <Textarea\n                id=\"address\"\n                v-model=\"v$.address.$model\"\n                :class=\"{ 'p-invalid': v$.address.$invalid && submitted }\"\n              />\n              <small\n                v-if=\"\n                  (v$.address.$invalid && submitted) ||\n                  v$.address.$pending.$response\n                \"\n                class=\"p-error\"\n                >{{\n                  v$.address.required.$message.replace(\"Value\", \"address\")\n                }}</small\n              >\n            </div>\n          </div>\n          <div class=\"p-formgroup-inline\">\n            <div class=\"p-field\">\n              <label for=\"telephone\" class=\"p-col-fixed\" style=\"width: 75px\"\n                >Telephone</label\n              >\n            </div>\n            <!-- v-for=\"(telephoneField, count) of telephoneFields\"\n              :key=\"count\" -->\n            <div class=\"p-field\">\n              <InputText\n                id=\"telephone\"\n                v-model=\"v$.telephone.$model\"\n                :class=\"{ 'p-invalid': v$.telephone.$invalid && submitted }\"\n              />\n              <small\n                v-if=\"\n                  (v$.telephone.$invalid && submitted) ||\n                  v$.telephone.$pending.$response\n                \"\n                class=\"p-error\"\n                >{{\n                  v$.telephone.required.$message.replace(\"Value\", \"Telephone\")\n                }}</small\n              >\n            </div>\n            <div class=\"\">\n              <Button\n                @click=\"increment\"\n                icon=\"pi pi-plus\"\n                class=\"p-button-rounded p-button-outlined p-mr-2\"\n              />\n              <Button\n                @click=\"decrement(event)\"\n                icon=\"pi pi-minus\"\n                class=\"p-button-rounded p-button-outlined\"\n              />\n            </div>\n          </div>\n          <div class=\"p-grid\">\n            <div class=\"p-col-6\">\n              <Button label=\"Cancel\" class=\"p-mt-2 p-button-danger\" @click=\"reset\" />\n            </div>\n            <div class=\"p-col-6\">\n              <Button type=\"submit\" label=\"Submit\" class=\"p-mt-2\" />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required } from \"@vuelidate/validators\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport Customer from \"../../src/apis/Customers\";\n\nexport default {\n  setup: () => ({ v$: useVuelidate() }),\n  data() {\n    return {\n      name: \"\",\n      nic: \"\",\n      address: \"\",\n      telephone: \"\",\n      telephoneFields: [{}],\n      submitted: false,\n      telephoneCount: 1,\n    };\n  },\n  validations() {\n    return {\n      name: {\n        required,\n      },\n      nic: {\n        required,\n      },\n      address: {\n        required,\n      },\n      telephone: {\n        required,\n      },\n    };\n  },\n  created() {},\n  mounted() {},\n  methods: {\n    handleSubmit(isFormValid) {\n      this.submitted = true;\n\n      if (!isFormValid) {\n        return;\n      } else {\n        let NewCustomer = {\n          name : this.name,\n          nic : this.nic,\n          address : this.address,\n          telephones : ['123','456']\n        }\n\n        Customer.addCustomer(NewCustomer).then((resp) => {\n          if(resp.data.data){\n            console.log(resp.data.data);\n            this.$toast.add({\n              severity: \"success\",\n              summary: \"Successful\",\n              detail: resp.data.message,\n              life: 3000,\n            });\n\n            this.$router.push('/customerList');\n          } else {\n            this.$toast.add({\n              severity: \"error\",\n              summary: \"Error Message\",\n              detail: resp.data.message,\n              life: 3000,\n            });\n          }\n        })\n      }\n    },\n    resetForm() {\n      this.name = \"\";\n      this.nic = \"\";\n      this.address = \"\";\n      this.telephone = null;\n      this.submitted = false;\n    },\n    increment() {\n      this.telephoneCount++;\n      let TelephoneObject = {\n        count : this.telephoneCount\n      };\n      this.telephoneFields.push(TelephoneObject);\n      console.log(this.telephoneCount);\n    },\n    decrement(event) {\n      console.log(event);\n      if (this.telephoneCount > 2) {\n        this.telephoneCount--;\n        this.telephoneFields.forEach(element => {\n          this.telephoneFields.splice(element,1);\n        });\n        console.log(this.telephoneCount);\n      }\n    },\n    reset() {\n      this.resetForm();\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.form-demo {\n  .card {\n    min-width: 800px;\n\n    form {\n      margin-top: 2rem;\n    }\n\n    .p-field {\n      margin-bottom: 1.5rem;\n    }\n  }\n\n  @media screen and (max-width: 960px) {\n    .card {\n      width: 80%;\n    }\n  }\n}\n</style>\n"]}]}